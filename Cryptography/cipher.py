lowers = "abcdefghijklmnopqrstuvwxyz "

def keyword_cipher(msg, keyword):
    key = "".join(sorted(lowers, key=f"{keyword.lower()}{lowers}".index))
    return "".join(key[lowers.index(char)] for char in msg.lower())



# The function keyword_cipher takes two arguments: msg and keyword.

# lowers is a string that contains all the lowercase letters of the alphabet and a space character.

# key is generated using a list comprehension and the sorted() function. It sorts lowers based on the index of each character in the concatenation of keyword.lower() and lowers.

# This concatenation ensures that the letters in keyword appear first in the sorted key string.

# The function returns a string that is generated by iterating through each character in msg.lower(), finding its index in lowers, and using that index to get the corresponding character from key.

# The final string is returned as the encrypted message.